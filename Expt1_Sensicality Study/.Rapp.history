length(p[abs(p) >= 1.96])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$statistic#
}
length(p[abs(p) >= 1.96])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$statistic#
}
length(p[abs(p) >= 1.96])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$statistic#
}
length(p[abs(p) >= 1.96])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$statistic#
}
length(p[abs(p) >= 1.96])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$statistic#
}
p
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean(log(rlnorm(30,0,1)))#
	subj_c2[i] <- mean(log(rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1)))#
	subj_c2[i] <- mean((rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1)))#
	subj_c2[i] <- mean((rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1)))#
	subj_c2[i] <- mean((rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1)))#
	subj_c2[i] <- mean((rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1)))#
	subj_c2[i] <- mean((rlnorm(30,0,1)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
hist(rlnorm(20,0,1))
hist(rlnorm(30,0,1))
hist(rlnorm(30,0,1.2))
hist(rlnorm(30,0,1.02))
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1.02)))#
	subj_c2[i] <- mean((rlnorm(30,0,1.02)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(30,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(30,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
p <- rep(NA,100000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:20){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = F, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])
length(p[abs(p) <= 0.05])/100000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(20,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(20,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(30,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/10000
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(5,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(5,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(1,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(1,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
p <- rep(NA,10000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(100,0,1.2)))#
	subj_c2[i] <- mean((rlnorm(100,0,1.2)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/10000
subj_c1
subj_c2
?rlnorm
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0,5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(30,0,0.5)))#
	subj_c2[i] <- mean((rlnorm(30,0,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
hist(subj_c1)
hist(subj_c2)
p[j]
t.test(subj_c1,subj_c2, paired = T, var.equal = T)
t.test(subj_c1,subj_c2, paired = F, var.equal = F)
hist(rlnorm(100,1,0.5))
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(100,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(100,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) > 0.05])/1000
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
p <- rep(NA,1000)#
for (j in 1:length(p)){ #
subj_c1 = rep(NA,20)#
subj_c2 = rep(NA,20)#
for (i in 1:30){#
	subj_c1[i] <- mean((rlnorm(25,1,0.5)))#
	subj_c2[i] <- mean((rlnorm(25,1,0.5)))#
}#
p[j] <- t.test(subj_c1,subj_c2, paired = T, var.equal = T)$p.value#
}
length(p[abs(p) <= 0.05])/1000
setwd("/Volumes/rablab/Prediction studies/LauraTurnTaking/data")
ls()
threes <- read.csv("3yo_R.csv")
fives <- read.csv("5yo_R.csv")
ads <- read.csv("Adult_R.csv")
summary(ads)
summary(fives)
rbind(fives,ads) -> a
ads <- read.csv("Adult_R.csv")
rbind(fives,ads) -> a
rbind(fives,ads, threes) -> a
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)
d = data.frame(Subj = rep(NA, times = 24*4), Pred = NA, Match = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subj == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subj == j & Match == i )$RT)#
			d$Subj[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
summary(threes)
summary(fives)
summary(ads)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
#
d = data.frame(Subject = rep(NA, times = 24*4), Pred = NA, Match = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Subj[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Pred + Match, data = d, FUN = c(mean, sd))
length(unique(tt$Subject))
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
d = data.frame(Subject = rep(NA, times = 24*4), Pred = NA, Match = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Subj[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Pred + Match, data = d, FUN = c(mean, sd))
length(unique(tt$Subject))
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)#
			d$Subj[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)
summary(d)
unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)
unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1]
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1]#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}
summary(d)
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}
summary(d)
summary(d$Age)
d$Age[1]
d$Age[5]
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
unique(tt$Subject)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
unique(tt$Incorrect)
summary(subset(tt, Incorrect="Child's response: mh-yeah" ))
summary(subset(tt, Incorrect=="Child's response: mh-yeah" ))
subset(tt, Incorrect=="Child's response: mh-yeah" )
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
unique(tt$Incorrect)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
unique(tt$Incorrect)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
unique(tt$Incorrect)
tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
summary(tt)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
£tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
>ezANOVA
?ezANOVA
library(ez)
?ezANOVA
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match))
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))
library(ggplot2)#
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]    #
p1 <- qplot(price, carat, data=dsamp, colour=clarity)#
p2 <- qplot(price, depth, data=dsamp, colour=clarity)
p1
p2
multiplot(p1 + theme(legend.position = "none"),p2,cols=2)
# Multiple plot function#
##
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)#
# - cols:   Number of columns in layout#
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.#
##
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),#
# then plot 1 will go in the upper left, 2 will go in the upper right, and#
# 3 will go all the way across the bottom.#
##
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {#
  library(grid)#
#
  # Make a list from the ... arguments and plotlist#
  plots <- c(list(...), plotlist)#
#
  numPlots = length(plots)#
#
  # If layout is NULL, then use 'cols' to determine layout#
  if (is.null(layout)) {#
    # Make the panel#
    # ncol: Number of columns of plots#
    # nrow: Number of rows needed, calculated from # of cols#
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),#
                    ncol = cols, nrow = ceiling(numPlots/cols))#
  }#
#
 if (numPlots==1) {#
    print(plots[[1]])#
#
  } else {#
    # Set up the page#
    grid.newpage()#
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))#
#
    # Make each plot, in the correct location#
    for (i in 1:numPlots) {#
      # Get the i,j matrix positions of the regions that contain this subplot#
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))#
#
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,#
                                      layout.pos.col = matchidx$col))#
    }#
  }#
}
multiplot(p1 + theme(legend.position = "none"),p2,cols=2)
?qplot
qplot(d$Pred, y=d$Mu, geom = "bar", stat = "identity", fill = d$Match, ylab = "Reaction Time (ms)", xlab = "", facet_wrap = Age)
qplot(d$Pred, y=d$Mu, geom = "bar",  fill = d$Match, ylab = "Reaction Time (ms)", xlab = "", facet_wrap = Age)
qplot(d$Pred, y=d$Mu, geom = "bar",  fill = d$Match, ylab = "Reaction Time (ms)", xlab = "", facet_wrap = d$Age)
qplot(d$Pred, y=d$Mu, geom = "bar",  fill = d$Match, ylab = "Reaction Time (ms)", xlab = "", facets = d$Age)
summary(mpg)
qplot(data = d, x = Pred, y=Mu, geom = "bar",  fill = Match, ylab = "Reaction Time (ms)", xlab = "", facets = Age)
qplot(data = d, x = Pred, y=Mu, geom = "bar",  fill = Match, ylab = "Reaction Time (ms)", xlab = "")
d
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))
qplot(data = re.summary, x = Pred, y=Mu, geom = "bar",  fill = Match, ylab = "Reaction Time (ms)", xlab = "")
qplot(data = re.summary, x = Pred, y=Mu.mean, geom = "bar",  fill = Match, ylab = "Reaction Time (ms)", xlab = "")
re.summary
qplot(data = re.summary, x = Pred, y=Mu.mean, geom = "bar", stat = "identity",  fill = Match, ylab = "Reaction Time (ms)", xlab = "")
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", position = "stack", aes(fill = Match)) +#
  coord_flip() +#
  labs(y = "\n% of total population", x = NULL)
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", position = "stack", aes(fill = Match)) +#
  facet_wrap(Age)
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", position = "stack", aes(fill = Match)) +#
  facet_wrap(~Age)
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", aes(fill = Match)) +#
  facet_wrap(~Age)
?geom_bar
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
re.summary <- summaryBy(RT ~ Age + Pred + Match, data = tt)
ggplot(data = re.summary, aes(x = Pred, y = RT)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
ggplot(data = re.summary, aes(x = Pred, y = RT.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
re.summary <- summaryBy(RT ~ Age + Pred + Match, data = tt, na.rm = T)
ggplot(data = re.summary, aes(x = Pred, y = RT.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
summary(tt)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
libary(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
£tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))
re.summary
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
libary(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
£tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RT)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
libary(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
£tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean, sd))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))
ggplot(data = re.summary, aes(x = Pred, y = RT.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
ggplot(data = re.summary, aes(x = Pred, y = Mu.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
ezANOVA(tt, dv = RT, wid = Subject, within = .(Pred,Match), between = .(Age))
ezANOVA(tt, dv = RTms, wid = Subject, within = .(Pred,Match), between = .(Age))
ggplot(data = re.summary, aes(x = Pred, y = Tau.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age)
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))
library(reshape2)
?melt
re.summary
re.summary.gg <- melt(re.summary(id.vars = c("Age","Pred","Match"), variable.name = "Parameter","Value"))
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter","Value")
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")
re.summary.gg
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")
re.summary.gg
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Tau.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age,Parameter)
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Tau.mean)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age+Parameter)
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Age+Parameter)
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Parameter+Age)
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))
ezANOVA(subset(d,Age =="Adult"), dv = Mu, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Adult"), dv = Sigma, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Adult"), dv = Tau, wid = Subject, within = .(Pred,Match))
ezANOVA(subset(d,Age =="Five"), dv = Mu, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Five"), dv = Sigma, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Five"), dv = Tau, wid = Subject, within = .(Pred,Match))
ezANOVA(subset(d,Age =="Three"), dv = Mu, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Three"), dv = Sigma, wid = Subject, within = .(Pred,Match))#
ezANOVA(subset(d,Age =="Three"), dv = Tau, wid = Subject, within = .(Pred,Match))
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
library(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
#tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))#
#
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Parameter+Age)
tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))#
#
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Parameter+Age)
summary(tt)
re.summary
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
library(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
re.summary
summary(tt)
summaryBy(Incorrect ~ Age + Pred + Match, data =tt)
tt<- subset(tt, Disfluent == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))#
#
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Parameter+Age)
re.summary
summaryBy(RTms ~ Age + Pred + Match, data =tt)
summaryBy(RTms ~ Age + Pred + Match, data =tt, FUN = length)
summaryBy(RTms ~ Age+Subject + Pred + Match, data =tt, FUN = length)
?timefit
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
library(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")
summaryBy(RT ~ Age + Pred  + Match, data = tt, FUN = c(mean,sd))
summaryBy(RT ~ Age + Pred  + Match, data = tt, FUN = c(mean,sd), na.rm = T)
summaryBy(RT ~Subj +  Age + Pred  + Match, data = tt, FUN = c(mean,sd), na.rm = T) -> a
summaryBy(RT.mean  + RT.sd ~Subj +  Age + Pred  + Match, data = a, FUN = c(mean,sd), na.rm = T)
summary(a)
summaryBy(RT.mean  + RT.sd ~Subj +  Age + Pred  + Match, data = a, FUN = c(mean,sd))
summaryBy(RT.mean  + RT.sd ~Subject +  Age + Pred  + Match, data = a, FUN = c(mean,sd), na.rm = T)
summary(a)
summary(tt)
summaryBy(RT ~Subject +  Age + Pred  + Match, data = tt, FUN = c(mean,sd), na.rm = T) -> a
summaryBy(RT.mean  + RT.sd ~Subj +  Age + Pred  + Match, data = a, FUN = c(mean,sd), na.rm = T)
# NOTE THAT FOR THESE ANALYSES YOU TYPICALLY NEED TO INCLUDE THE LONG RT TAIL. I recommend rt >0 & rt <16000#
library(retimes)#
library(doBy)#
library(ez)#
#
ads <- read.csv("Adult_R.csv")#
fives <- read.csv("5yo_R.csv")#
threes <- read.csv("3yo_R.csv")#
#
ads$Age <- "Adult"#
fives$Age <- "Five"#
threes$Age <- "Three"#
#
tt <- rbind(ads,fives,threes)#
tt$Age <- as.factor(tt$Age)#
tt$Subject <- paste(tt$Age,tt$Subject, sep = "")#
#
#tt<- subset(tt, Incorrect == 0)#
d = data.frame(Subject = rep(NA, times = length(unique(tt$Subject))*4), Pred = NA, Match = NA, Age = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(tt$Pred)){#
	for (j in unique(subset(tt, Pred == k)$Subj)){#
		for (i in unique(subset(tt, Pred == k & Subject == j)$Match)){#
			a = timefit(subset(tt, Pred == k & Subject == j & Match == i )$RTms)#
			d$Age[index] <- as.character(unique(subset(tt, Pred == k & Subject == j & Match == i )$Age)[1])#
			d$Subject[index] <- j#
			d$Pred[index] <- k#
			d$Match[index] <- i#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))#
#
ezANOVA(d, dv = Mu, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Sigma, wid = Subject, within = .(Pred,Match), between = .(Age))#
ezANOVA(d, dv = Tau, wid = Subject, within = .(Pred,Match), between = .(Age))#
#
re.summary.gg <- melt(re.summary,id.vars = c("Age","Pred","Match"), variable.name = "Parameter",value.name = "Value")#
ggplot(data = re.summary.gg, aes(x = Pred, y = Value)) +#
  geom_bar(stat = "identity", position = "dodge", aes(fill = Match)) +#
  facet_wrap(~Parameter+Age)
library(plyr)#
library(lme4)#
library(doBy)#
library(ggplot2)#
#
read_data <- function(path_name){#
list.files(path = path_name,full.names = T, pattern = ".csv") -> file_list#
comp = c()#
for (x in file_list){#
	data <- read.csv(x,header = T)#
	if ("perceptual.rating.reactiontime" %in% colnames(data)){ #
		data <- subset(data, select = -perceptual.rating.reactiontime)#
		}#
		if ("X" %in% colnames(data)){ #
		data <- subset(data, select = -X)#
		data$rt <- as.character(data$rt)#
		}#
	comp <- rbind(comp, data)#
	}#
	return(comp)#
}#
#
sense.pop <- read_data("./data/")#
#
# Make RTs numeric [need to remove timeout "none" responses to 8s]#
sense.pop <- subset(sense.pop, rt != "None")#
sense.pop$rt <- as.numeric(sense.pop$rt)#
sense.pop$Length <- nchar(as.character(sense.pop$prime),allowNA = T)#
sense.pop$Condition <- as.character(sense.pop$prime_semantics)#
sense.pop[sense.pop$prime_semantics %in% c("Sklar_control_A","Sklar_control_B"),]$Condition <- "Sklar_control"#
sense.pop$Condition <- as.factor(sense.pop$Condition)#
# Note that this analysis includes all of the inclusion criteria discussed by Sklar et al. #
#
###########################################################################################################################
##
# Let's first analyze for the Sklar trials#
sense.pop.sklar <- subset(sense.pop, Condition %in% c("Sklar_control", "Sklar_violation")) #
#
# Remove outlier subjects by Accuracy and RT (mean acc must be > 0.9, mean rt must be < 3sd above group mean)#
Acc <- summaryBy(match. + rt ~ SubjNo, data = subset(sense.pop.sklar), keep.names = T)#
sense.pop.sklar <- subset(sense.pop.sklar, SubjNo %in% Acc[Acc$match. > 0.9,]$SubjNo)#
#
sense.pop.sklar <- subset(sense.pop.sklar, SubjNo %in% Acc[Acc$rt < (mean(Acc$rt) + (3*sd(Acc$rt))),]$SubjNo)#
#
# Remove incorrect trials#
sense.pop.sklar <- subset(sense.pop.sklar, match. == 1)#
#
# Remove outliers by subject (less than 3sd from participant mean -- note that this is not a symmetric exclusion criterion)#
sense.pop.sklar <- ddply(sense.pop.sklar, .(SubjNo), function(d){ #
	by_subj_include <- mean(d$rt, na.rm = T) + 3*c(-1,1)*sd(d$rt,na.rm = T)#
	d = subset(d, rt < by_subj_include[2])#
	})#
# [for Expt 1 only] Remove outliers by condition (less than 3sd from condition mean -- note that this is not a symmetric exclusion criterion)#
sense.pop.sklar <- ddply(sense.pop.sklar, .(Condition), function(d){ #
	by_subj_include <- mean(d$rt, na.rm = T) + 3*c(-1,1)*sd(d$rt,na.rm = T)#
	d = subset(d, rt < by_subj_include[2])#
	})#
#
# Remove RTs < 200ms#
sense.pop.sklar <- subset(sense.pop.sklar, rt > 0.2)#
#
# T test (Sklar style)#
sense.pop.sklar.summary <- summaryBy(rt ~ SubjNo + Condition, data = subset(sense.pop.sklar,  Condition %in% c("Sklar_violation", "Sklar_control")), keep.names = T)#
t.test(rt ~ Condition, data = sense.pop.sklar.summary, paired = T)#
t.test(log(rt) ~ Condition, data = sense.pop.sklar.summary, paired = T)#
#
# Bayes factor -- minimum effect of 0.01, maximum of 0.06, our effect = -0.03519684 and our SE = -0.03/-1.7874=  0.01678416#
#
# lmer (Rabag style)#
sense.pop.sklar.raw <- summary(lmer(rt ~ Condition + (1+Condition|SubjNo)+ (1|prime), data = subset(sense.pop.sklar,  Condition %in% c("Sklar_violation", "Sklar_control"))))#
print(sense.pop.sklar.raw)#
print(paste("p value = ", 2*pnorm(-abs(coef(sense.pop.sklar.raw)[,3]))))#
#
sense.pop.sklar.log <- summary(lmer(log(rt) ~ Condition + (1+Condition|SubjNo)+ (1|prime), data = subset(sense.pop.sklar,  Condition %in% c("Sklar_violation", "Sklar_control"))))#
print(sense.pop.sklar.log)#
print(paste("p value = ", 2*pnorm(-abs(coef(sense.pop.sklar.log)[,3]))))#
###########################################################################################################################
##
# Let's now analyze for the new trials#
sense.pop.new <- subset(sense.pop, Condition %in% c("Sensible", "Non-sensible")) #
#
# Remove outlier subjects by Accuracy and RT (mean acc must be > 0.9, mean rt must be < (!!, see by trial exclusion below) 3sd from group mean)#
Acc <- summaryBy(match. + rt ~ SubjNo, data = subset(sense.pop.new), keep.names = T)#
sense.pop.new <- subset(sense.pop.new, SubjNo %in% Acc[Acc$match. > 0.9,]$SubjNo)#
sense.pop.new <- subset(sense.pop.new, SubjNo %in% Acc[Acc$rt < (mean(Acc$rt) + (3*sd(Acc$rt))),]$SubjNo)#
#
# Remove incorrect trials#
sense.pop.new <- subset(sense.pop.new, match. == 1)#
#
# Remove outliers by subject (less than 3sd from participant mean -- note that this is not a symmetric exclusion criterion)#
sense.pop.new <- ddply(sense.pop.new, .(SubjNo), function(d){ #
	by_subj_include <- mean(d$rt, na.rm = T) + 3*c(-1,1)*sd(d$rt,na.rm = T)#
	d = subset(d, rt < by_subj_include[2])#
	})#
# [for Expt 1 only] Remove outliers by condition (less than 3sd from condition mean -- note that this is not a symmetric exclusion criterion)#
sense.pop.new <- ddply(sense.pop.new, .(Condition), function(d){ #
	by_subj_include <- mean(d$rt, na.rm = T) + 3*c(-1,1)*sd(d$rt,na.rm = T)#
	d = subset(d, rt < by_subj_include[2])#
	})#
# Remove RTs < 200ms#
sense.pop.new <- subset(sense.pop.new, rt > 0.2)#
#
# T test (Sklar style)#
sense.pop.new.summary <- summaryBy(rt ~ SubjNo + Condition, data = subset(sense.pop.new,  Condition %in% c("Non-sensible","Sensible")), keep.names = T)#
t.test(rt ~ Condition, data = sense.pop.new.summary, paired = T)#
t.test(log(rt) ~ Condition, data = sense.pop.new.summary, paired = T)#
#
# Bayes factor -- minimum effect of 0.01, maximum of 0.06, our effect = -0.0002327283 and our SE = -0.03/-0.02217=  0.01049744#
# lmer (rabag style)#
sense.pop.new.raw <-summary(lmer(rt ~ Condition + (1+Condition|SubjNo)+ (1|prime), data = subset(sense.pop.new,  Condition %in% c("Non-sensible","Sensible"))))#
print(sense.pop.new.raw)#
print(paste("p value = ", 2*pnorm(-abs(coef(sense.pop.new.raw)[,3]))))#
#
sense.pop.new.log <- summary(lmer(log(rt) ~ Condition + (1+Condition|SubjNo)+ (1|prime), data = subset(sense.pop.new,  Condition %in% c("Non-sensible","Sensible"))))#
print(sense.pop.new.log)#
print(paste("p value = ", 2*pnorm(-abs(coef(sense.pop.new.log)[,3]))))#
#
############################################################################################################################
##
# Finally -- a quick test if longer stims are perceived faster than shorter, #
#
sense.pop.length <- sense.pop#
#
# Remove outlier subjects by Accuracy and RT (mean acc must be > 0.9, mean rt must be < (!!, see by trial exclusion below) 3sd from group mean)#
Acc <- summaryBy(match. + rt ~ SubjNo, data = subset(sense.pop.length), keep.names = T)#
sense.pop.length <- subset(sense.pop.length, SubjNo %in% Acc[Acc$match. > 0.9,]$SubjNo)#
sense.pop.length <- subset(sense.pop.length, SubjNo %in% Acc[Acc$rt < (mean(Acc$rt) + (3*sd(Acc$rt))),]$SubjNo)#
#
# Remove incorrect trials#
sense.pop.length <- subset(sense.pop.length, match. == 1)#
#
# Remove outliers by subject (less than 3sd from participant mean -- note that this is not a symmetric exclusion criterion)#
sense.pop.length <- ddply(sense.pop.length, .(SubjNo), function(d){ #
	by_subj_include <- mean(d$rt, na.rm = T) + 3*c(-1,1)*sd(d$rt,na.rm = T)#
	d = subset(d, rt < by_subj_include[2])#
	})#
# Remove RTs < 200ms#
sense.pop.length <- subset(sense.pop.length, rt > 0.2)#
#
# Standardize lenth#
sense.pop.length$Length <- (sense.pop.length$Length - mean(sense.pop.length$Length, na.rm = T))/sd(sense.pop.length$Length, na.rm = T)#
sense.pop.length.raw <- summary(lmer(rt ~ Length + (1+Length|SubjNo), data = sense.pop.length))#
print(sense.pop.length.raw)#
print(paste("p value = ", 2*pnorm(-abs(coef(sense.pop.length.raw)[,3]))))#
############################################################################################################################
##
# Graphs#
#
sense.sklar.graph <- summaryBy(rt ~ Condition + SubjNo, data = sense.pop.sklar, keep.names = T)#
sense.sklar.graph <- summaryBy(rt ~ Condition, data = sense.sklar.graph, FUN = c(mean,sd))#
sense.sklar.graph$SE <- sense.sklar.graph$rt.sd/sqrt(length(unique(sense.pop.sklar$SubjNo)))#
sense.sklar.graph$Experiment <- "Experiment 1a"#
#
sense.new.graph <- summaryBy(rt ~ Condition + SubjNo, data = sense.pop.new, keep.names = T)#
sense.new.graph <- summaryBy(rt ~ Condition, data = sense.new.graph, FUN = c(mean,sd))#
sense.new.graph$SE <- sense.new.graph$rt.sd/sqrt(length(unique(sense.pop.new$SubjNo)))#
sense.new.graph$Experiment <- "Experiment 1b"#
#
sense.graph <- rbind(sense.sklar.graph,sense.new.graph)#
sense.graph$Cond_Graph <- "Violation"#
sense.graph[sense.graph$Condition %in% c("Sklar_control", "Sensible"),]$Cond_Graph <- "Control"#
sense.graph$Cond_Graph <- ordered(sense.graph$Cond_Graph, levels = c("Violation", "Control")) #
sense.graph$rt.mean <- sense.graph$rt.mean * 1000#
sense.graph$SE <- sense.graph$SE * 1000#
#
dodge <- position_dodge(width=0.9)#
qplot(sense.graph$Experiment, sense.graph$rt.mean, geom = "bar", stat = "identity", fill = sense.graph$Cond_Graph, ylab = "Reaction Time (ms)", xlab = "", position = dodge, ylim = c(0,2000)) +  geom_errorbar(aes(ymax = sense.graph$rt.mean + sense.graph$SE, ymin = sense.graph$rt.mean - sense.graph$SE), width=0.25, position = dodge) + labs(fill = "Sentence Type") + theme(axis.text.x = element_text(colour = "black", size = 12))
summary(sense.pop.new)
for (k in unique(sense.pop.new$Condition)){print(k)}
d = data.frame(Subject = rep(NA, times = length(unique(sense.pop.new$SubjNo))*2), Sensible = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(sense.pop.new$Condition)){#
	for (j in unique(subset(sense.pop.new, Condition == k)$SubjNo)){#
					a = timefit(subset(sense.pop.new, Condition == k & SubjNo == j )$RTms)#
			d$Subject[index] <- j#
			d$Condition[index] <- k#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))
k
d = data.frame(Subject = rep(NA, times = length(unique(sense.pop.new$SubjNo))*2), Sensible = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(sense.pop.new$Condition)){#
	for (j in unique(subset(sense.pop.new, Condition == k)$SubjNo)){#
			a = timefit(subset(sense.pop.new, Condition == k & SubjNo == j )$rt)#
			d$Subject[index] <- j#
			d$Condition[index] <- k#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
	}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))
d = data.frame(Subject = rep(NA, times = length(unique(sense.pop.new$SubjNo))*2), Sensible = NA, Mu = NA, Sigma = NA, Tau = NA)#
index = 1#
for (k in unique(sense.pop.new$Condition)){#
	for (j in unique(subset(sense.pop.new, Condition == k)$SubjNo)){#
			a = timefit(subset(sense.pop.new, Condition == k & SubjNo == j )$rt)#
			d$Subject[index] <- j#
			d$Condition[index] <- k#
			d$Mu[index] <- a@par[1]#
			d$Sigma[index] <- a@par[2]#
			d$Tau[index] <- a@par[3]#
			index <- index + 1#
#
			}#
		}#
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Age+Pred + Match, data = d, FUN = c(mean))
re.summary
re.summary <- summaryBy(Mu + Sigma+ Tau ~ Condition, data = d, FUN = c(mean))
re.summary
